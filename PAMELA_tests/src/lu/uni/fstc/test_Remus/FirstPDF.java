package lu.uni.fstc.test_Remus;

import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.io.FileOutputStream;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import com.itextpdf.awt.DefaultFontMapper;
import com.itextpdf.awt.PdfGraphics2D;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfTemplate;
import com.itextpdf.text.pdf.PdfWriter;

/**
 * @author sandro.reis
 *
 */
public class FirstPDF {
	// private static String FILE =
	// "C://Users//remus.dobrican//Desktop//FirstPdf.pdf";
	private static DefaultPieDataset dataSet1; 
	private static DefaultCategoryDataset dataSet2;
	private static float width = 200, height = 200;
	
	private static String FILE = "PDF/SecondPdf.pdf";
//	private static final String groupName = "Master in Computer Science";
	private static Image barImage1, pieImage1, barImage2, pieImage2 ;

	private static Font titleFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
			Font.BOLD);
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
			Font.BOLD);
	private static Font small = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.NORMAL);
	private static Font smallRed = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.ITALIC, BaseColor.RED);
	private static Font smallItalic = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.ITALIC);
	
	/**
	 * @param args
	 */
	public static void main(final String[] args) {

		try {
			final Document document = new Document();
			final PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(FILE));
			document.open();

			addMetaData(document);
			addTitlePage(document, writer);
			// addContent(document);

			document.close();
		} catch (final Exception e) {
			e.printStackTrace();
		}
	}

	// iText allows to add metadata to the PDF which can be viewed in your Adobe
	// Reader
	// under File -> Properties
	private static void addMetaData(final Document document) {
		document.addTitle("Statistics");
		document.addSubject("Statistics about the Social Groups");
		document.addKeywords("Social Groups");
		document.addAuthor("Dobrican Remus");
		document.addCreator("Dobrican Remus");
	}

	private static void addTitlePage(final Document document, final PdfWriter writer)
			throws DocumentException {
		final Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(new Paragraph("Statistics", titleFont));

		// We add one empty line
		addEmptyLine(preface, 1);
		// First sentence
		firstSentence(preface);

		// We add one empty line
		addEmptyLine(preface, 1);
		// First category
		firstCategory(preface);
		
		// We add one empty line
		addEmptyLine(preface, 1);
		
		// we get the info to their corresponding dataSets
		initializeDataSets();
		
		// creates the first set of statistics
		createCourseImages(writer);
		
        // Adds the first table with statistics
	    createCourseTable(preface);

		// We add one empty line
		addEmptyLine(preface, 1);
		// Second category
		secondCategory(preface);
		
		// creates the first set of statistics
		createGroupImages(writer);
				
		// Adds the first table with statistics
		createGroupTable(preface);

		document.add(preface);
		// Start a new page
		document.newPage();
	}

	private static void firstSentence(final Paragraph preface) {
		final Chunk chunk_a1 = new Chunk(
				"	This report generated by the Proactive System in order to provide students with"
						+ "fresh news about the interaction inside the social groups. The information is divided"
						+ "in 2 main relevant categories : ", small);
		final Chunk chunk_a2 = new Chunk("Course Statistics", smallRed);
		final Chunk chunk_a3 = new Chunk("Group Statistics", smallRed);

		chunk_a2.setUnderline(+1f, -2f);
		chunk_a3.setUnderline(+1f, -2f);

		final Paragraph firstSentence = new Paragraph();
		firstSentence.add(chunk_a1);
		firstSentence.add(chunk_a2);
		firstSentence.add(new Chunk(" and ", small));
		firstSentence.add(chunk_a3);
		firstSentence.add(new Chunk(".", small));

		preface.add(firstSentence);
	}

	private static void firstCategory(final Paragraph preface) {
		preface.add(new Paragraph("Course Statistics", catFont));

		final Chunk chunk_b1 = new Chunk(
				" In this category, we have information about some of the most "
						+ "interesting data from the Course - ", small);
		final Chunk chunk_b2 = new Chunk("Communities of Practice", smallItalic);

		preface.add(chunk_b1);
		preface.add(chunk_b2);
		preface.add(new Chunk(".", small));

	}

	private static void secondCategory(final Paragraph preface) {
		preface.add(new Paragraph("Group Statistics", catFont));

		final Chunk chunk_b1 = new Chunk(
				" In this category, we have information about some of the most "
						+ "interesting data from the Course - ", small);
		final Chunk chunk_b2 = new Chunk("Communities of Practice", smallItalic);

		// Graphics2D g2d = document.

		preface.add(chunk_b1);
		preface.add(chunk_b2);
		preface.add(new Chunk(".", small));
	}

	private static void addEmptyLine(final Paragraph paragraph, final int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}
	
	private static void createCourseImages(final PdfWriter writer) throws DocumentException {
		 // step 4
        final PdfContentByte cb = writer.getDirectContent();
        
        // Pie chart
        final PdfTemplate pie = cb.createTemplate(width, height);
        final Graphics2D g2d1 = new PdfGraphics2D(pie, width, height);
        final Rectangle2D r2d1 = new Rectangle2D.Double(0, 0, width, height);
        ChartFactory.createPieChart("World Population by countries", dataSet1, true, false, false).draw(g2d1, r2d1);        
        g2d1.dispose();
        pieImage1 = Image.getInstance(pie);
        
        // Bar chart
        final PdfTemplate bar = cb.createTemplate(width, height);
        final Graphics2D g2d2 = new PdfGraphics2D(bar, width, height);
        final Rectangle2D r2d2 = new Rectangle2D.Double(0, 0, width, height);
        
        ChartFactory.createBarChart("World Population  ", "Year", "Population in millions", dataSet2, PlotOrientation.VERTICAL, false, true, false).draw(g2d2, r2d2);
        
        
        g2d2.dispose();
        barImage1 = Image.getInstance(bar);
	}
	
	private static void createCourseTable(final Paragraph preface) {
		
		final PdfPTable table = new PdfPTable(2);
		
		PdfPCell c1 = new PdfPCell(barImage1);
		c1.setPaddingLeft(8);
		c1.setPaddingRight(8);
		c1.setPaddingTop(8);
		c1.setPaddingBottom(8);	
		c1.setBorderColor(BaseColor.WHITE);
		table.addCell(c1);

		c1 = new PdfPCell(pieImage1);
		c1.setPaddingLeft(8);
		c1.setPaddingRight(8);
		c1.setPaddingTop(8);
		c1.setPaddingBottom(8);
		c1.setBorderColor(BaseColor.WHITE);
		table.addCell(c1);
		table.setWidthPercentage(100);		

		preface.add(table);		
	}
	
	private static void createGroupImages(final PdfWriter writer) throws DocumentException {
		 // step 4
       final PdfContentByte cb = writer.getDirectContent();
       
       // Pie chart
       final PdfTemplate pie = cb.createTemplate(width, height);
       final Graphics2D g2d1 = new PdfGraphics2D(pie, width, height);
       final Rectangle2D r2d1 = new Rectangle2D.Double(0, 0, width, height);

       ChartFactory.createPieChart("World Population by countries", dataSet1, true, false, false).draw(g2d1, r2d1);        
       g2d1.dispose();
       pieImage2 = Image.getInstance(pie);
       
       // Bar chart
       final PdfTemplate bar = cb.createTemplate(width, height);
       final Graphics2D g2d2 = new PdfGraphics2D(bar, width, height);
       final Rectangle2D r2d2 = new Rectangle2D.Double(0, 0, width, height);
       ChartFactory.createBarChart("World Population  ", "Year", "Population in millions", dataSet2, PlotOrientation.VERTICAL, false, true, false).draw(g2d2, r2d2);
       g2d2.dispose();
       barImage2 = Image.getInstance(bar);
	}
	
	private static void createGroupTable(final Paragraph preface) {
		
		final PdfPTable table = new PdfPTable(2);
		
		PdfPCell c1 = new PdfPCell(pieImage2);
		c1.setPaddingLeft(8);
		c1.setPaddingRight(8);
		c1.setPaddingTop(8);
		c1.setPaddingBottom(8);	
		c1.setBorderColor(BaseColor.WHITE);
		table.addCell(c1);

		c1 = new PdfPCell(barImage2);
		c1.setPaddingLeft(8);
		c1.setPaddingRight(8);
		c1.setPaddingTop(8);
		c1.setPaddingBottom(8);
		c1.setBorderColor(BaseColor.WHITE);
		table.addCell(c1);
		table.setWidthPercentage(100);		

		preface.add(table);		
	}
	

	/**
	 * @param chart
	 * @param width
	 * @param height
	 * @param fileName
	 */
	@SuppressWarnings("deprecation")
	public static void writeChartToPDF(final JFreeChart chart, final int width, final int height, final String fileName) {
		PdfWriter writer = null;
		
		final Document document = new Document();
		
		try {
			writer = PdfWriter.getInstance(document, new FileOutputStream(fileName));
			document.open();
			final PdfContentByte contentByte = writer.getDirectContent();
			final PdfTemplate template = contentByte.createTemplate(width, height);
			final Graphics2D graphics2d = template.createGraphics(width, height, new DefaultFontMapper());
			final Rectangle2D rectangle2d = new Rectangle2D.Double(0, 0, width, height);
			chart.draw(graphics2d, rectangle2d);
			
			graphics2d.dispose();
			contentByte.addTemplate(template, 0, 0);
		} catch (final Exception e) {
			e.printStackTrace();
		}
		document.close();
	}
	
	/**
	 * 
	 */
	public static void initializeDataSets(){
		dataSet1 = new DefaultPieDataset();
        dataSet1.setValue("China", 19.64);
        dataSet1.setValue("India", 17.3);
        dataSet1.setValue("United States", 4.54);
        dataSet1.setValue("Indonesia", 3.4);
        dataSet1.setValue("Brazil", 2.83);
        dataSet1.setValue("Pakistan", 2.48);
        dataSet1.setValue("Bangladesh", 2.38);
		
		dataSet2 = new DefaultCategoryDataset();
		//dataSet3 = new Default
        dataSet2.setValue(791, "Population", "1750");
        dataSet2.setValue(978, "Population", "1800");
        dataSet2.setValue(1262, "Population", "1850");
        dataSet2.setValue(1650, "Population", "1900");
        dataSet2.setValue(2519, "Population", "1950");
        dataSet2.setValue(6070, "Population", "2000");
	}
}